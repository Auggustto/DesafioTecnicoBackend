version: '3'

services:
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "2223:5432"
    env_file:
      - ./.env
    volumes:
      - ./save_db/DesafioTecnicoBackend
    networks:
      - app-network

  fastapi:
    build: .
    command: ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "app.main:app"]
    ports:
      - "8000:80"
    # environment:
    #   SQLALCHEMY_DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/postgres"
    env_file:
      - ./.env
    depends_on:
      - postgres
    networks:
      - app-network
  
  # # Configuração para rodar os testes
  # test:
  #   build: .
  #   command: ["./run_tests.sh", "fastapi", "pytest"]
  #   environment:
  #     SQLALCHEMY_DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/postgres"
  #   depends_on:
  #     - fastapi
  #     - postgres
  #   networks:
  #     - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - fastapi
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
